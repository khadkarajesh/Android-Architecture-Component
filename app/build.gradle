buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}



android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.crushcoder.moviesmvvm"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'MOVIE_API_KEY', '"3d9f6ef05faa3072ee2caf7fb6870964"'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    //glide
    compile 'com.github.bumptech.glide:glide:4.2.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

dependencies {
    implementation('com.afollestad.material-dialogs:commons:0.9.4.7', {
        exclude group: 'com.android.support'
    })
}

//testing
dependencies {
    testImplementation "org.mockito:mockito-core:2.12.0"
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.12'
}

dependencies {
    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    //reactive
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    //logging
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
}

//architecture components
dependencies {
    implementation "android.arch.lifecycle:extensions:1.0.0-beta2"
    implementation "android.arch.lifecycle:common-java8:1.0.0-beta2"
    implementation "android.arch.lifecycle:reactivestreams:1.0.0-beta2"
    compile 'com.uber.autodispose:autodispose-android-archcomponents:0.3.0'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:+'
}

//di
dependencies {
    compile 'com.google.dagger:dagger:2.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.12'

    compile 'com.google.dagger:dagger-android:2.12'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.12'
}
dependencies {
    implementation 'com.android.support:support-v4:26.+'
    compile 'com.google.firebase:firebase-core:11.4.2'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:+'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:+'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:+'
}
apply plugin: 'com.google.gms.google-services'